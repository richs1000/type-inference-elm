var _user$project$HistoryView$historySquareSeparation = 5;
var _user$project$HistoryView$historySquareSize = 25;
var _user$project$HistoryView$historySquare = F2(
	function (h, i) {
		var myX = 10 + ((_user$project$HistoryView$historySquareSize + _user$project$HistoryView$historySquareSeparation) * i);
		var base = _elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$svg$Svg_Attributes$width(
				_elm_lang$core$Basics$toString(_user$project$HistoryView$historySquareSize)),
				_elm_lang$svg$Svg_Attributes$height(
				_elm_lang$core$Basics$toString(_user$project$HistoryView$historySquareSize)),
				_elm_lang$svg$Svg_Attributes$y('10')
			]);
		var incorrect = A2(
			_elm_lang$core$List$append,
			base,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$fill('red')
				]));
		var correct = A2(
			_elm_lang$core$List$append,
			base,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$fill('green')
				]));
		var nothing = A2(
			_elm_lang$core$List$append,
			base,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$fill('white')
				]));
		var _p0 = h;
		if (_p0.ctor === 'Just') {
			if (_p0._0 === true) {
				return A2(
					_elm_lang$svg$Svg$rect,
					A2(
						_elm_lang$core$List$append,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$x(
								_elm_lang$core$Basics$toString(myX))
							]),
						correct),
					_elm_lang$core$Native_List.fromArray(
						[]));
			} else {
				return A2(
					_elm_lang$svg$Svg$rect,
					A2(
						_elm_lang$core$List$append,
						_elm_lang$core$Native_List.fromArray(
							[
								_elm_lang$svg$Svg_Attributes$x(
								_elm_lang$core$Basics$toString(myX))
							]),
						incorrect),
					_elm_lang$core$Native_List.fromArray(
						[]));
			}
		} else {
			return A2(
				_elm_lang$svg$Svg$rect,
				A2(
					_elm_lang$core$List$append,
					_elm_lang$core$Native_List.fromArray(
						[
							_elm_lang$svg$Svg_Attributes$x(
							_elm_lang$core$Basics$toString(myX))
						]),
					nothing),
				_elm_lang$core$Native_List.fromArray(
					[]));
		}
	});
var _user$project$HistoryView$historyList = F2(
	function (history, index) {
		var _p1 = history;
		if (_p1.ctor === '::') {
			return A2(
				_elm_lang$core$List_ops['::'],
				A2(_user$project$HistoryView$historySquare, _p1._0, index),
				A2(_user$project$HistoryView$historyList, _p1._1, index + 1));
		} else {
			return _elm_lang$core$Native_List.fromArray(
				[]);
		}
	});
var _user$project$HistoryView$historySection = F2(
	function (history, historyLength) {
		return A2(
			_elm_lang$svg$Svg$svg,
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$svg$Svg_Attributes$version('1.1'),
					_elm_lang$svg$Svg_Attributes$baseProfile('full'),
					_elm_lang$svg$Svg_Attributes$width(
					_elm_lang$core$Basics$toString(historyLength * (_user$project$HistoryView$historySquareSize + _user$project$HistoryView$historySquareSeparation))),
					_elm_lang$svg$Svg_Attributes$height('50')
				]),
			A2(_user$project$HistoryView$historyList, history, 0));
	});
